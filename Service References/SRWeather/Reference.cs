//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment5.SRWeather {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SRWeather.IServicePhase2Meghana")]
    public interface IServicePhase2Meghana {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePhase2Meghana/GetWeatherForecast", ReplyAction="http://tempuri.org/IServicePhase2Meghana/GetWeatherForecastResponse")]
        string[] GetWeatherForecast(string Zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePhase2Meghana/GetWeatherForecast", ReplyAction="http://tempuri.org/IServicePhase2Meghana/GetWeatherForecastResponse")]
        System.Threading.Tasks.Task<string[]> GetWeatherForecastAsync(string Zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePhase2Meghana/GetWindData", ReplyAction="http://tempuri.org/IServicePhase2Meghana/GetWindDataResponse")]
        string GetWindData(int latitude, int longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePhase2Meghana/GetWindData", ReplyAction="http://tempuri.org/IServicePhase2Meghana/GetWindDataResponse")]
        System.Threading.Tasks.Task<string> GetWindDataAsync(int latitude, int longitude);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePhase2MeghanaChannel : Assignment5.SRWeather.IServicePhase2Meghana, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePhase2MeghanaClient : System.ServiceModel.ClientBase<Assignment5.SRWeather.IServicePhase2Meghana>, Assignment5.SRWeather.IServicePhase2Meghana {
        
        public ServicePhase2MeghanaClient() {
        }
        
        public ServicePhase2MeghanaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePhase2MeghanaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePhase2MeghanaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePhase2MeghanaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetWeatherForecast(string Zip) {
            return base.Channel.GetWeatherForecast(Zip);
        }
        
        public System.Threading.Tasks.Task<string[]> GetWeatherForecastAsync(string Zip) {
            return base.Channel.GetWeatherForecastAsync(Zip);
        }
        
        public string GetWindData(int latitude, int longitude) {
            return base.Channel.GetWindData(latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<string> GetWindDataAsync(int latitude, int longitude) {
            return base.Channel.GetWindDataAsync(latitude, longitude);
        }
    }
}
